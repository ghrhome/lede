#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  workflow_dispatch:
  #push:
  #  branches: 
  #    - master
  # schedule:
  #   - cron: 0 20 * * *
  #release:
  #  types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    # runs-on: ubuntu-latest
    runs-on: ubuntu-20.04

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          
          CONFIG_TARGET_ipq40xx=y
          CONFIG_TARGET_ipq40xx_generic=y
          CONFIG_TARGET_ipq40xx_generic_DEVICE_mydevice=y
          
          # 1GB RAM
          CONFIG_TARGET_KERNEL_PARTSIZE="256"
          CONFIG_TARGET_ROOTFS_PARTSIZE="256"
          CONFIG_TARGET_ROOTFS_PARTNAME="ubi"
          CONFIG_TARGET_ROOTFS_INCLUDE_UBIFS=y
          CONFIG_TARGET_ROOTFS_UBIFS_MAXLEBSIZE=15872
          CONFIG_TARGET_ROOTFS_UBIFS_MAXLEBCNT=2047
          CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP=y
          CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP_THRESHOLD=0

          # 256MB NAND
          CONFIG_PACKAGE_kmod-mtd-nand=y
          CONFIG_PACKAGE_kmod-mtd-rw=y
          CONFIG_PACKAGE_kmod-mtd-rw-sysfs=y
          CONFIG_PACKAGE_kmod-mtd-ubi=y
          CONFIG_PACKAGE_kmod-mtd-ubi-tests=y
          CONFIG_PACKAGE_kmod-ubi-utils=y
          CONFIG_PACKAGE_kmod-ubifs-utils=y
          CONFIG_PACKAGE_uboot-envtools=y
          CONFIG_TARGET_ROOTFS_UBIFS=y
          CONFIG_TARGET_ROOTFS_UBIFS_SPLIT_64K=y
          CONFIG_TARGET_ROOTFS_UBIFS_DATA_BUF_SIZE=2048
          CONFIG_TARGET_ROOTFS_UBIFS_MAX_LEB_CNT=2047
          CONFIG_TARGET_ROOTFS_UBIFS_MAX_LEB_SIZE=15872
          
          # QCA8075 交换机以及三个网口（一个 WAN 口和两个 LAN 口）
          CONFIG_PACKAGE_kmod-phylink=y
          CONFIG_PACKAGE_kmod-ksz884x-eth=y
          CONFIG_PACKAGE_kmod-dsa-ksz884x=y
          CONFIG_PACKAGE_kmod-switch-bcm53xx=y
          CONFIG_PACKAGE_kmod-qca8k=y
          
          # TUSB4020BI USB 2.0 Hub
          CONFIG_PACKAGE_kmod-usb-uhub=y

          # Zigbee EM3581
          CONFIG_PACKAGE_kmod-usb-serial-ch341=y
          CONFIG_PACKAGE_kmod-usb-serial-pl2303=y
          CONFIG_PACKAGE_kmod-usb-serial-usbdebug=y

          # FEM SE2432L
          CONFIG_PACKAGE_kmod-cfg80211=y
          CONFIG_PACKAGE_kmod-ath10k=y
          CONFIG_PACKAGE_kmod-ath10k-ct=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca9888-ct=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca9888=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca9887=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca988x=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca4019=y

          # 2.4GHz WiFi
          CONFIG_PACKAGE_kmod-mt76=y
          CONFIG_PACKAGE_kmod-mt76x2-common=y
          CONFIG_PACKAGE_kmod-mt76x2u=y
          CONFIG_PACKAGE_kmod-mt76x2=y
          CONFIG_PACKAGE_kmod-mt76-connac=y
          CONFIG_PACKAGE_kmod-mt76x02-common=y
          CONFIG_PACKAGE_kmod-mt76x02-usb=y

          # 5GHz WiFi
          CONFIG_PACKAGE_kmod-mt76=y
          CONFIG_PACKAGE_kmod-mt76x2-common=y
          CONFIG_PACKAGE_kmod-mt76x2u=y
          CONFIG_PACKAGE_kmod-mt76x2=y
          CONFIG_PACKAGE_kmod-mt76-connac=y
          CONFIG_PACKAGE_kmod-mt76x02-common=y
          CONFIG_PACKAGE_kmod-mt76x02-usb=y

          # 天线增益和功率
          CONFIG_PACKAGE_kmod-ath=y
          CONFIG_PACKAGE_kmod-mt76-core=y
          CONFIG_PACKAGE_kmod-ath9k=y
          CONFIG_PACKAGE_kmod-ath9k-htc=y
          CONFIG_PACKAGE_kmod-ath9k-common=y
          CONFIG_PACKAGE_kmod-ath10k=y
          CONFIG_PACKAGE_kmod-ath10k-ct=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca9888-ct=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca9888=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca9887=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca988x=y
          CONFIG_PACKAGE_kmod-ath10k-firmware-qca4019=y
          CONFIG_PACKAGE_kmod-mt76-usb=y
          CONFIG_PACKAGE_kmod-mt76x2-common=y
          CONFIG_PACKAGE_kmod-mt76x2u=y
          CONFIG_PACKAGE_kmod-mt76x2=y
          CONFIG_PACKAGE_kmod-mt76=y
          CONFIG_PACKAGE_kmod-mt76-connac=y
          CONFIG_PACKAGE_kmod-mt76x02-common=y
          CONFIG_PACKAGE_kmod-mt76x02-usb=y
          
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
